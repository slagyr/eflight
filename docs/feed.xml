<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://micahmartin.com/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.6.3">Jekyll</generator><link href="http://micahmartin.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://micahmartin.com/" rel="alternate" type="text/html" /><updated>2019-11-01T16:08:08-07:00</updated><id>http://micahmartin.com//</id><title type="html">Electric Airplane Adventures</title><subtitle>My adventures in building electric airplanes.
</subtitle><author><name>Micah Martin</name></author><entry><title type="html">NiteLite</title><link href="http://micahmartin.com/2019/11/01/nitelite.html" rel="alternate" type="text/html" title="NiteLite" /><published>2019-11-01T00:00:00-07:00</published><updated>2019-11-01T00:00:00-07:00</updated><id>http://micahmartin.com/2019/11/01/nitelite</id><content type="html" xml:base="http://micahmartin.com/2019/11/01/nitelite.html">&lt;p&gt;A while back I modernized an old-school arcade that came with our house.  I was running Windows 98 on a tower PC and a fat CRT monitor.  I cut about 2’ off the back of the 7’ tall box, replaced the monster CRT with a flat LCD screen, replaced the big tower PC with a credit card sized Raspberry Pi, and installed &lt;a href=&quot;https://retropie.org.uk&quot;&gt;RetroPi&lt;/a&gt; along with classic Commodore 64, Nintendo, and arcade games.  It’s much nicer to use now.&lt;/p&gt;

&lt;p&gt;The cherry on top was an &lt;a href=&quot;https://www.amazon.com/gp/product/B07JN28KP3&quot;&gt;Color LED strip&lt;/a&gt; to make it glow against the wall.  Check it out!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-11-01/7.jpg&quot; alt=&quot;Arcade&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;controlling-led-strips&quot;&gt;Controlling LED Strips&lt;/h4&gt;

&lt;p&gt;The point of that story is that I was left with an extra strip of LEDs and no control box or remote to power it.  So one day I wired it up to an Arduino to figure out how it works.  It’s rather simple.  There are four leads or “pins”: 12V in, R(ed), G(reen), B(lue).  Obviously the 12V pin gets connected to a 12V power supply.  When the R, G, or B pins are connected to ground, the LEDs light up in the corresponding color.  If they all get connected to ground, the LEDs glow bright white.  But I wondered: How does that control box get the LEDs to fade in and out with variable brightness?&lt;/p&gt;

&lt;p&gt;Here’s how I did it.  With the LEDs’s RGB pins connected to ground through an NPN transistor, the Arduino can turn the LEDs on by putting 5V on the transistor Base.  Even better, the Arduino has a few PWM (Pulse Width Modulation) pins.  They basically turn on and off really fast and you can code the percentage of time they are ON.  Using PWM pins the Arduino can turn the LEDs ON and OFF really fast and control the percentage of time they are ON.  Did I mention the PWM is fast?  It is.  Faster than the eye can see.  So by setting the PWM pins to a low value, the LEDs glow faintly, and with the PWM set to a high value, they glow bright. Cool!&lt;/p&gt;

&lt;p&gt;Well, I thought, “There’s gotta be something I can build with that.”  After Googling I found an idea.  My 8yo son Tristan has a clunky night light globe that he turns on every night.  It has a static glow pattern in 3 different colors and rotates with a rattling noise that makes you think it’s going to fall apart any minute.  My plan was to build Tristan a much cooler night light.&lt;/p&gt;

&lt;p&gt;The new and improved night light, code named “NiteLite”, would have a strip of LED’s lighting up a glass carving that would glow in a elegant and soothing manner.  An Arduino would control the colors and brightness of the LEDs. And why not put some knobs to allow Tristan to change the color and brightness to any of thousands of possibilities?  To make it even more fun, NiteLite will have a couple buttons that’ll let you cycle through various modes.  Each mode will make the colors dance, fade, and entertaining in various ways.&lt;/p&gt;

&lt;p&gt;After some tinkering, I completed a prototype:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-11-01/1.jpg&quot; alt=&quot;Airworthy NiteLite&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;3d-printing&quot;&gt;3D Printing&lt;/h4&gt;

&lt;p&gt;The base of the NiteLite needs to A) hold up the glass carving, and B) encase the electronics.  It occurred to me that I have some “transparent” (more like translucent) PLA that could be used to get the base to glow a bit too.  So I designed a 3 part base that you can see below.  The top section holds the glass.  The middle section uses the clear PLA for a glowing layer.  And the base will hold the electronics.&lt;/p&gt;

&lt;p&gt;Although I originally planned to hide all the circuitry inside the base, I rather like the look of circuit boards.  It’s probably just me but circuit boards are cool and keeping it all exposed adds character and intrigue.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-11-01/2.png&quot; alt=&quot;Case&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;acrylic-cnc&quot;&gt;Acrylic CNC&lt;/h4&gt;

&lt;p&gt;I wanted to use my CNC router to carve the glass although I wasn’t going to carve real glass… that’s just scary.  So I went to the hardware store to look for some clear plastic.  What I found was a nice sheet of acrylic.&lt;/p&gt;

&lt;p&gt;Using Fusion 360 I designed a… well… I’ll call it a “glow plate”.  Fusion can import SVG images so for the prototype I just used some Airworthy SVG files that I had on my computer. I took my design out to the CNC machine and…  machined it.  It looked terrible.  I didn’t know what I was doing.  And unfortunately, there aren’t any good tutorials about CNC’ing acrylic online.  So I had to play around, do some trial and error.  Eventually I found techniques in CAD, CAM, and CNC that resulted in a decent looking glow plate.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-11-01/3.png&quot; alt=&quot;Acrylic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In my research I leaned that there are two types of acrylic: extruded and cast.  What I had picked up from the hardware store was extruded acrylic.  It’s of lesser quality and I felt that may have caused some of the imperfections in my work.  It was also quite thin at 5mm.  This is the material used in the prototype image above.&lt;/p&gt;

&lt;p&gt;On &lt;a href=&quot;https://www.mcmaster.com/acrylic-sheet-stock&quot;&gt;McMaster-Carr&lt;/a&gt; I found some cast acrylic stock and ordered a 13mm wide sheet.  The result of CNC’ing the cast acrylic was quite a bit nicer and I’m fond of the beefy thickness.&lt;/p&gt;

&lt;h4 id=&quot;circuitry&quot;&gt;Circuitry&lt;/h4&gt;

&lt;p&gt;I designed the NiteLite circuit schematic in &lt;a href=&quot;https://easyeda.com&quot;&gt;EasyEDA&lt;/a&gt;.  Compared to previous circuits I’ve designed, this one is pleasantly simple.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 Arduino, the brains of the outfit&lt;/li&gt;
  &lt;li&gt;1 OLED screen to display color levels and mode.&lt;/li&gt;
  &lt;li&gt;4 NPN transistors, 3 to control the RGB LED pins and 1 to turn the OLED screen on and off.&lt;/li&gt;
  &lt;li&gt;3 5k potentiometers as knobs to control color brightness&lt;/li&gt;
  &lt;li&gt;2 tactile switches, the buttons to navigate modes&lt;/li&gt;
  &lt;li&gt;1 on/off switch for the 12V power&lt;/li&gt;
  &lt;li&gt;3 10K resistors to work in combination with the potentiometers to divide the 12V down to &amp;lt;5V for the Aurduino anlalog input pins&lt;/li&gt;
  &lt;li&gt;2 4.7k resistors as pullups for I2C comm between Arduino and OLED screen.&lt;/li&gt;
  &lt;li&gt;4 1k resistors to limit current to the transistor bases.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-11-01/4.jpg&quot; alt=&quot;Schematic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the prototype, I wired up through-pin components onto a proto-board.  This was time consuming and did not produce the most aesthetic circuit board as you can see in the prototype image above.  For the final product I designed a PCB (printed circuit board) and ordered surface-mount components and better through-hole components.  See below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-11-01/5.png&quot; alt=&quot;PCB&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I ordered these in a black finish.  See how nice it looks in the last image below.&lt;/p&gt;

&lt;h4 id=&quot;source-code&quot;&gt;Source Code&lt;/h4&gt;

&lt;p&gt;On the Arduino you can choose which every programming language you like, so long as it’s C++.  Urg!  Coding in C++ is a drag.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/slagyr/nitelite&quot;&gt;code base is available on Github&lt;/a&gt;.  It was developed using TDD (Test Driven Design) so all the code is tested, except for the thin layer that interfaces directly with the Arduino hardware.&lt;/p&gt;

&lt;h4 id=&quot;tristans-nitelite&quot;&gt;Tristan’s NiteLite&lt;/h4&gt;

&lt;p&gt;Yesterday, Tristan and I worked on a design for his NiteLite.  He chose the font used on his name and after exploring many options for decorating it, he settled on a symbolic flame.  I printed the base, CNC’ed the glow plate, and put it all together today while he’s at school.  It’s on his night stand waiting for him to find it when he gets home.  I think he’ll like it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-11-01/6.jpg&quot; alt=&quot;Tristan NiteLite&quot; /&gt;&lt;/p&gt;</content><author><name>Micah Martin</name></author><category term="3D Printing" /><category term="Electronics" /><summary type="html">A while back I modernized an old-school arcade that came with our house.  I was running Windows 98 on a tower PC and a fat CRT monitor.  I cut about 2’ off the back of the 7’ tall box, replaced the monster CRT with a flat LCD screen, replaced the big tower PC with a credit card sized Raspberry Pi, and installed RetroPi along with classic Commodore 64, Nintendo, and arcade games.  It’s much nicer to use now.</summary></entry><entry><title type="html">eBike: Milled Circuit Board</title><link href="http://micahmartin.com/2019/09/25/ebike-milled-circuit-board.html" rel="alternate" type="text/html" title="eBike: Milled Circuit Board" /><published>2019-09-25T00:00:00-07:00</published><updated>2019-09-25T00:00:00-07:00</updated><id>http://micahmartin.com/2019/09/25/ebike-milled-circuit-board</id><content type="html" xml:base="http://micahmartin.com/2019/09/25/ebike-milled-circuit-board.html">&lt;p&gt;The eBike is controlled with a &lt;a href=&quot;https://www.raspberrypi.org/products/raspberry-pi-4-model-b/&quot;&gt;Raspberry Pi&lt;/a&gt;, which will be the topic of a later post.  Here’s I’d like to discuss circuit board through which the Raspberry Pi manages all the hardware on the bike.  The hardware features include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Headlights&lt;/li&gt;
  &lt;li&gt;Tail Light&lt;/li&gt;
  &lt;li&gt;Brake Light&lt;/li&gt;
  &lt;li&gt;Brake Cutoff&lt;/li&gt;
  &lt;li&gt;Ignition&lt;/li&gt;
  &lt;li&gt;Power Up&lt;/li&gt;
  &lt;li&gt;Speedometer / Odometer&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;circuit-board-evolution&quot;&gt;Circuit Board Evolution&lt;/h4&gt;

&lt;p&gt;Here’s the original prototype that was assembled piecemeal as the bike evolved.  The protoboard worked great but got quite crowded toward the end.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-25/2.jpg&quot; alt=&quot;Prototype&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What a mess, eh?  With the circuit fully fleshed out, it was time to create a more permanent solution.&lt;/p&gt;

&lt;p&gt;In total there were 5 attempts to get a finished product.  Here’s the graveyard of failed and obsolete boards.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-25/3.jpg&quot; alt=&quot;Graveyard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A closeup of the populated board:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-25/1.jpg&quot; alt=&quot;Populated&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The 5th version is currently on the bike.  Truth be told, there will likely be a 6th version because I still had to hack the 5th to get it working right.&lt;/p&gt;

&lt;h4 id=&quot;mcb---milled-circuit-board&quot;&gt;MCB - Milled Circuit Board&lt;/h4&gt;

&lt;p&gt;With the &lt;a href=&quot;/eflight/2019/09/09/ebike-bms.html&quot;&gt;BMS circuit board&lt;/a&gt;, I sent my design to &lt;a href=&quot;https://jlcpcb.com&quot;&gt;JLCPCB&lt;/a&gt; which is a great Printed Circuit Board (PCB) manufacturer.  The quality of their boards are very high at a great price!  Sadly, it takes a week for them to manufacture the boards and for the shipping company to deliver them.  And you have to order multiple boards.&lt;/p&gt;

&lt;p&gt;This eBike board is a one-off.  And I didn’t want to wait a week.  So I tried a technique I saw on Youtube:  Milled Circuit Boards.  The design process is mostly the same as for PCBs.  &lt;a href=&quot;https://easyeda.com/&quot;&gt;EasyEDA&lt;/a&gt; is my tool if choice for designing circuit boards.  Finished designs come in the form of “Gerber” files.  These are what you give the manufactures.  However, for this board I needed to convert the Gerber files into a format that I could use on my &lt;a href=&quot;https://carbide3d.com/shapeoko/&quot;&gt;Shapeoko CNC Router&lt;/a&gt;.  &lt;a href=&quot;http://flatcam.org/&quot;&gt;FlatCAM&lt;/a&gt; is open source desktop software specifically made to convert Gerber files into GCode (CNC language). It did the trick.&lt;/p&gt;

&lt;p&gt;Watching the CNC machine work on these circuit boards is mesmerizing.  I took a video that you can watch below.  NOISE ALERT!  You might want to turn down your speaker before playing.&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/362420662&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h4 id=&quot;general-architecture&quot;&gt;General Architecture&lt;/h4&gt;

&lt;p&gt;Now for the nitty-gritty.  You can stop reading unless you’re into electrical circuit design.&lt;/p&gt;

&lt;p&gt;The board has two power rails, 3.3V provided by the Raspberry Pi, and ~60V that comes from the batteries.  Both rails have a common ground.&lt;/p&gt;

&lt;h5 id=&quot;lights&quot;&gt;Lights&lt;/h5&gt;

&lt;p&gt;Controlling the Headlights, Tail Light, and Brake Light is straight forward.  All three lights are LED’s that run off 60V.  I had ordered some high voltage logic level N-channel power MOSFETS.  The 3.3V from the Raspberry Pi is sufficient to drive the Gate pin of the FETs.  The Source pin is connected to ground and the Drain is connected to the cathode of the LEDs.  Easy.&lt;/p&gt;

&lt;h5 id=&quot;brake-cutoff&quot;&gt;Brake Cutoff&lt;/h5&gt;

&lt;p&gt;The Brake Cutoff is a safety feature of the ESC (Electronic Speed Controller) that prevents the rider from applying both the brakes and accelerator at the same time.  The ESC has a Brake Cutoff wire that should go to ground when brakes are applied.  In most bikes, this wire is connected directly to the brake handles which have an internal switch that closes when you apply them.  However, I need the Brake Light to turn on when brakes are applied, so the simple solution doesn’t work.&lt;/p&gt;

&lt;p&gt;My brakes are connected the the 3.3V rail and an a GPIO pin of the Raspberry Pi.  When brakes are applied, the GPIO pin goes HIGH and the software detects this.  The Brake Light is turned on and another MOSFET is turned on to connect the Brake Cuttoff wire to ground.&lt;/p&gt;

&lt;h5 id=&quot;ignition&quot;&gt;Ignition&lt;/h5&gt;

&lt;p&gt;Another wire exposed by the ESC, the Ignition, is typically connected to an ignition key that switches the battery voltage.  No significant power is drawn through this wire.  It’s simply a signal to tell the ESC that the bike has been turned on.&lt;/p&gt;

&lt;p&gt;No key for me.  Instead my bike uses a key pad on the touch screen.  When the correct code is entered, the Ignition is turned on.&lt;/p&gt;

&lt;p&gt;The simple N-Channel MOSFET trick won’t work to connect the ESC’s Ignition wire to 60V.  It would require a charge pump or something to bring the Gate to ~63V.  Parts I didn’t have.  What I did have was opto FETs; solid-state relays where one side is an LED that turns on a FET bridging the other side.  And to my luck, they are rated for 60V.  Win!&lt;/p&gt;

&lt;p&gt;When the secret code is entered, the Raspberry Pi brings a GPIO HIGH to turn on the opto FET.  The other side of the FET bridges 60V with the Ignition wire. Now, when I measured the current drawn by the Ignition wire, I read 50 mA.  The opto FETs are rated for 100mA so all’s good.  But there must be a current spike because the opto FET got fried.  A current limiting resistor, protection diode, and a new opto FET played together nicely.&lt;/p&gt;

&lt;p&gt;Then I noticed that the ignition stayed on, even when the Raspberry PI pulls the pin LOW.  Maybe it was intern capacitance of the opto FET, or some mystery of the ESC internals.  Either way I couldn’t let the Ignition stay ON for some unkown duration.  So using another opto FET I bring the Ignition wire to ground momentarily, and then it stays there.&lt;/p&gt;

&lt;h5 id=&quot;power-up&quot;&gt;Power Up&lt;/h5&gt;

&lt;p&gt;Another divergence from typical bike design is that I wanted my batteries TOTALLY disconnected from the motor when the bike is not in use.  The problem here is that the ESC has some hefty capacitors that love to charge up quick when connected to power.  You can see the spark when the ESC is first connected to batteries.&lt;/p&gt;

&lt;p&gt;When the Raspberry Pi unlocks the bike, after the secret code is entered, the first thing it does is turn on the batteries.  If the bike has been sitting for a while, those hungry capacitors in the ESC are just waiting to chug some juice, and when the batteries are turned on the caps do chug, fast!  Current coming out the batteries sky rockets and the BMS kicks in shutting down the battery; Discharge Overcurrent.&lt;/p&gt;

&lt;p&gt;What’s needed is a “warm up” circuit.  Something that feeds those caps at a slow rate until they’re full enough that the batteries can safely be turned on.  So I measured the ESC capacitance, 4mF, and did some math.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;t = RC, 2*t give 95% charge and I’d like that to be 1 sec or less, so t = 0.5.&lt;/li&gt;
  &lt;li&gt;0.5 = R * 0.004 ===&amp;gt;  R = 125.  We’ll round it down to 120 ohms.  Now how much power is going through that resistor?&lt;/li&gt;
  &lt;li&gt;P = V^2/R ===&amp;gt; 30W.  Wow.  That’s a lot of power.  It means I need to order special power resistors.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How to power this “warm up” circuit with out turning the batteries on?  Well, I tapped that batteries directly, bypassing the BMS, to created an isolated 60V rail on the circuit board.  It’s not ideal, but for this project we’ll let it slide.&lt;/p&gt;

&lt;p&gt;The positive sides of the “warm up” 60 V and normal 60V rails are linked through the 120 ohm power resistor.  But the grounds goes through another N-channel MOSFET.  When the N-FET is turned on the normal 60V rail is powered, limited by the resistor, and the ESC caps charge up for 1 second.  Then the N-FET is turned off and the batteries are turned on, without any Overcurrent.&lt;/p&gt;

&lt;p&gt;Since the N-FET is on an isolated ground, the Gate can’t be driven by the Raspberry Pi.  The Gate needs to be driven from the isolated “warm up” power.  Hmm…  Well the Raspberry Pi can turn on an opto FET.   And resistors can divide the “warm up”’s 60V down to 5V to drive the Gate.   So there you have it.&lt;/p&gt;

&lt;h5 id=&quot;speedometer--odometer&quot;&gt;Speedometer / Odometer&lt;/h5&gt;

&lt;p&gt;The wheels on the bike go round and round.  Given the diameter of the tire and the interval between rotations, calculating speed and distance is easy.&lt;/p&gt;

&lt;p&gt;There is a “Hall” wire exposed by the ESC that is undocumented.  Using my scope I learned that it produces a 3V square wave of 16 periods for each revolution of the tire.  By using a GPIO pin on the Raspberry Pi, I was able to detect the rises of the square wave and use that to calculate speed and distance.&lt;/p&gt;

&lt;p&gt;There were just two problems.&lt;/p&gt;

&lt;p&gt;1) The Hall wire actually peaked at 5V, though only in very short spikes.  Three pins on the Raspberry Pi got fried before I figured this out.  The fix was to use another opto FET.  The Hall wire turns it on with 5V.  The Raspberry Pi powers the other side with 3.3V.&lt;/p&gt;

&lt;p&gt;2) EMI - Electro-Magnetic Interference.  The ESC inverts the DC current into AC at a high rate to drive the motor. This produces EMI all over the circuit that can be seen on the scope as tiny spikes in voltage, dozens a second.  The Raspberry Pi pin to sees these as dozens of rises each second, even if the tire isn’t moving.  Although this problem vexed me for days, the solution was simple.  A 100nF capacitor across the pin and ground did the trick.&lt;/p&gt;

&lt;p&gt;Originally, I ordered a Reed switch (a switch that reacts to magnets) that I would install on the front tire.  But I was intrigued by the Hall wire and the simplicity it would add to the overall design.  But I’ll freely admist that the Speedometer and Odometer are not 100% reliable due to the problems mentioned above.  Now I’m inclined to install that reed switch and be done with the Hall meter mess.&lt;/p&gt;</content><author><name>Micah Martin</name></author><category term="ebike" /><summary type="html">The eBike is controlled with a Raspberry Pi, which will be the topic of a later post.  Here’s I’d like to discuss circuit board through which the Raspberry Pi manages all the hardware on the bike.  The hardware features include:</summary></entry><entry><title type="html">eBike: BMS</title><link href="http://micahmartin.com/2019/09/09/ebike-bms.html" rel="alternate" type="text/html" title="eBike: BMS" /><published>2019-09-09T00:00:00-07:00</published><updated>2019-09-09T00:00:00-07:00</updated><id>http://micahmartin.com/2019/09/09/ebike-bms</id><content type="html" xml:base="http://micahmartin.com/2019/09/09/ebike-bms.html">&lt;p&gt;As mentioned in the &lt;a href=&quot;/eflight/2019/02/08/building-a-bms.html&quot;&gt;previous blog about BMS&lt;/a&gt;, I designed a PCB (printed circuit board) to accommodate the BQ76940 (monitoring chip) by TI (Texas Instruments).  This board has served me well so far in multiple applications.  Below is a picture of the BMS board fully populated.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-09/1.jpg&quot; alt=&quot;BMS&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;components--features&quot;&gt;Components &amp;amp; Features&lt;/h4&gt;

&lt;h5 id=&quot;mosfets&quot;&gt;MOSFETS&lt;/h5&gt;

&lt;p&gt;Metal Oxide Field Effect Transistors (MOSFETs or FETs) are the gates for incoming (charge) current and outgoing (discharge) current.  The picture above only has two, but 4 can be installed to share the load.  In normal operation, all FETs are “ON” allowing current to flow in both directions.  But when something goes wrong, say the batteries voltage is too low, the discharge FETs can be turned off protecting the cells from being drained too much.  Or if the charge voltage is too high the charge FETs can be turned off to, again, protect the cells.&lt;/p&gt;

&lt;h5 id=&quot;fet-driver&quot;&gt;FET Driver&lt;/h5&gt;

&lt;p&gt;The FETs are N-Channel MOSFETs.  Without going into too much detail, just know that N-Channel FETs need a relatively high voltage to be turned on.  And if you don’t turn them on fast or hard enough, they can get really hot.  So that’s what the driver takes care of.  When you tell the driver to turn on a FET, through use of a charge pump, it sends a nice high voltage with plenty of current to turn that FET on hard.&lt;/p&gt;

&lt;h5 id=&quot;voltage-senors&quot;&gt;Voltage Senors&lt;/h5&gt;

&lt;p&gt;The monitoring chip (BQ76940) does most of the hard work here, but there are plenty of components involved in getting the chip connected to both ends of each cell.  This is all the small stuff on the left side of the board.  The voltage of each cell is measured up to 4 times a second.&lt;/p&gt;

&lt;h5 id=&quot;balance-circuits&quot;&gt;Balance Circuits&lt;/h5&gt;

&lt;p&gt;For each cell there are several components, most notably a transistor and power resistor all the way on the left, that allow the board to slowly drain current from each cell individually.  Typically while charging, if one or more cells has a higher voltage than the others, it can be “balanced” back down to a voltage that matches its peers.&lt;/p&gt;

&lt;h5 id=&quot;current-measuring&quot;&gt;Current Measuring&lt;/h5&gt;

&lt;p&gt;In the lower right, between the BATT- and PACK- terminals, there’s a 0.001 ohm resistor through which all pack current flows. Using Ohm’s Law (V=IR), the voltage on each side of the resistor can be measured to determine how much current is flowing in or out of the battery.&lt;/p&gt;

&lt;h5 id=&quot;pre-charge-circuit&quot;&gt;Pre-Charge Circuit&lt;/h5&gt;

&lt;p&gt;The four power resistors lined up near the top center are power resistors used to charge the cells at a very slow rate.  This is handy when the cells have been over-depleted and full charge current would damage them.&lt;/p&gt;

&lt;h5 id=&quot;controller-interface-pins&quot;&gt;Controller Interface Pins&lt;/h5&gt;

&lt;p&gt;Although this BMS circuit can do a ton of stuff, it’s without brains.  To complete the task, some software running on a microcontroller is needed.  The connector on the bottom center is where the controller is connected.&lt;/p&gt;

&lt;h4 id=&quot;microcontroller&quot;&gt;Microcontroller&lt;/h4&gt;

&lt;h5 id=&quot;arduino-nano&quot;&gt;Arduino Nano&lt;/h5&gt;

&lt;p&gt;In the picture below, the BMS is all connected in a test environment.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The cells are all connected through the balance wires.&lt;/li&gt;
  &lt;li&gt;The positive and negative terminals are connected to BATT+ and BATT- respectively.&lt;/li&gt;
  &lt;li&gt;The “load” is connected to PACK+ and PACK-.&lt;/li&gt;
  &lt;li&gt;The controller is connected to the interface pins&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-09/2.jpg&quot; alt=&quot;BMS Wired Up&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here, I was using an Arduino Nano as the microcontroller.  It worked.  But programming in C/C++ is, well, wordy and slow.  The Nano also lacks in the memory department.  I was reaching the limits of how much code I could put on the poor chip and I had only just gotten started.&lt;/p&gt;

&lt;h5 id=&quot;adafruit-feature--circuitpython&quot;&gt;Adafruit Feature / CircuitPython&lt;/h5&gt;

&lt;p&gt;Adafruit sells a wonderful &lt;a href=&quot;https://www.adafruit.com/feather&quot;&gt;line of boards called Feathers&lt;/a&gt;.  Not only are they much beefier than the Arduino Nano, but they come equipped with CircuitPython which means you can program them in Python!  Now, Python is not my favorite language, but compared to coding in C, it tastes like ambrosia, nectar of the gods.&lt;/p&gt;

&lt;p&gt;I started with the Feather M0, and progress was quick.  But Python consumes a LOT more memory than C, and runs at a fraction of the speed.  It wasn’t long before I hit a wall and had to upgrade to the Feather M4.  I made much more progress with that board, but there was another problem.&lt;/p&gt;

&lt;p&gt;Adafruit, bless their hearts, caters to beginners.  As a consequence, writing code in CircuitPython was like riding a bike with training wheels.  The friendliness of the environment wore off fast and I was hindered every step I took.&lt;/p&gt;

&lt;h5 id=&quot;pyboard--micropython&quot;&gt;PyBoard / MicroPython&lt;/h5&gt;

&lt;p&gt;MicroPython is the ancestor of CircuitPython and it keeps things real.  PyBoards, which are similar to the Feathers, are designed specifically to run MicroPython and include plenty of peripheral hardware (like an accelerometer) to keep things interesting.&lt;/p&gt;

&lt;p&gt;On the PyBoard, I was was able to plow through and accomplish all my goals. The finished BMS not only included the main battery protection circuit, but also a little OLED screen to monitor the pack and a rotary encoder to interact with it.&lt;/p&gt;

&lt;h4 id=&quot;electric-skateboard-20&quot;&gt;Electric Skateboard 2.0&lt;/h4&gt;

&lt;p&gt;The first use of this freshly squeezed BMS was the skateboard.  Sadly, the previous not-so-smart BMS that was installed in the skateboard had failed and allowed the cells to fully drain.  They were no good any longer.  So I built a new pack of cells, installed the BMS, and 3D-printed a new cover.  See below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-09/3.jpg&quot; alt=&quot;BMS in Skateboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The new cells are on the left.  The BMS is in the middle with the PyBoard stacked on top using a 3D printed mount I designed.  And on the right is the motor speed controller.  Attached to the cover is the OLED screen and rotary encoder with dangling wires that get connected to the PyBoard’s circuitry.&lt;/p&gt;

&lt;p&gt;You may notice that there is also a buck converter stacked on top of the BMS.  The BMS board does provide about 20 mA of power, but it’s not enough for the PyBoard, OLED screen, and rotary encoder.  The buck converter takes the 36V juice directly from the batteries and feeds the other devices at 3.3V.&lt;/p&gt;

&lt;h4 id=&quot;works-too-well&quot;&gt;Works Too Well&lt;/h4&gt;

&lt;p&gt;The BMS in the skateboard worked perfectly!  It did everything I programmed it to do.  But the real world is not perfect.&lt;/p&gt;

&lt;p&gt;You see.  When a speed controller says it uses 30A max, it really uses up to 31 or 32 amps some times.  My BMS saw that said “Shut The Front Door!”   And when a charger says it charges at 42V, it really charges at 42.3 or even 43V.  Again, my BMS saw this and said “Foul!  Red Card!”  The problems kept coming and my perfect little BMS became a paranoid schizophrenic.  I put it on Lithium (see what I did there?) and updated its code to “model the real world”.&lt;/p&gt;

&lt;p&gt;Not long after, I was riding skateboard 2.0 around the neighborhood and life was good. With that accomplishment under my belt I called my brother Justin and told him I was ready to build some battery packs for his derelict moped.  I already told that story.&lt;/p&gt;

&lt;h4 id=&quot;ebike-bmss&quot;&gt;eBike BMS’s&lt;/h4&gt;

&lt;p&gt;They’re kinda buried beneath the wires in this picture, but you can make them out.&lt;/p&gt;

&lt;p&gt;In this design, I did away with the OLED screen and rotary encode because there’s a RaspberryPi and touch screen that I’ll talk about in a later post.&lt;/p&gt;

&lt;p&gt;Of note here is that the two BMS are working in parallel.  They don’t know about each other yet they share all the connections to the rest of the bike.  This demonstrated some interesting feedback problems.  For example, at one point BMS #1 shutdown due to discharge over current.  That left BMS #2 and it’s cells to do all the work powering the bike.  It did fine but used up a bunch of juice in the process.  When I realized that happened, I tried to turn BMS #1 on.  But, it had a higher voltage than BMS #2 now and immediately started to charge BMS #2.  Since there’s no resistance between the two BMS’s, the current skyrocketed and both BMS’s shutdown due to overcurrent.  There was no way to turn them on anymore.  They were locked in an death grip… until I charged them.&lt;/p&gt;

&lt;p&gt;Some communication is needed between the BMS’s.  In the case of the eBike, I took advantage of the RaspberryPi to mediate.  The BMS’s were already talking to the RaspbeeryPI to report their status and voltages.  By expanding the communication API the RaspberryPi is able to make sure both BMS’s play nice with each other.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-09/4.png&quot; alt=&quot;BMS in eBike&quot; /&gt;&lt;/p&gt;</content><author><name>Micah Martin</name></author><category term="eBike" /><category term="BMS" /><summary type="html">As mentioned in the previous blog about BMS, I designed a PCB (printed circuit board) to accommodate the BQ76940 (monitoring chip) by TI (Texas Instruments).  This board has served me well so far in multiple applications.  Below is a picture of the BMS board fully populated.</summary></entry><entry><title type="html">eBike: Batteries</title><link href="http://micahmartin.com/2019/09/04/ebike-batteries.html" rel="alternate" type="text/html" title="eBike: Batteries" /><published>2019-09-04T00:00:00-07:00</published><updated>2019-09-04T00:00:00-07:00</updated><id>http://micahmartin.com/2019/09/04/ebike-batteries</id><content type="html" xml:base="http://micahmartin.com/2019/09/04/ebike-batteries.html">&lt;h4 id=&quot;goals&quot;&gt;Goals&lt;/h4&gt;

&lt;h5 id=&quot;speed&quot;&gt;Speed&lt;/h5&gt;

&lt;p&gt;The key to speed with electric vehicles is voltage.  The higher the voltage, the faster the motor can spin, for the most part.  Although my BMS can handle 15 cells in series (54V), I found that 14 cells in series (50.4V) propels the bike plenty fast, faster than I’m comfortable going on a bicycle.  As I mentioned before, 40+ mph is easily attainable.  50V is also a bit more manageable in terms of electrical components, so that’s the spec.&lt;/p&gt;

&lt;h5 id=&quot;acceleration--range&quot;&gt;Acceleration / Range&lt;/h5&gt;

&lt;p&gt;Amps = Torque.  The more current you can send to the motor, the more torque or acceleration you get.  Each cell in parallel adds 10A in my case.  Also, the more cells you have, the more Wh or range you get.  No reason to skimp here.  I wanted to fit as many cells as possible in the bike.&lt;/p&gt;

&lt;h5 id=&quot;learning&quot;&gt;Learning&lt;/h5&gt;

&lt;p&gt;The electric plane will have lots of packs and a central control unit will be needed to coordinate their behavior.  The networked design has to be proven.  So for this bike, although it would be simpler to have a single pack, two packs are used in parallel to tackle this next advancement.&lt;/p&gt;

&lt;h4 id=&quot;encapsulation&quot;&gt;Encapsulation&lt;/h4&gt;

&lt;p&gt;The batteries have to be a “part” of the bike.  In the first version I just plopped the batteries in the saddle bags.  Cargo capacity was limited, wires were in the way, and I had to be careful not to put metal objects in the bags else I might short the cells.  The center triangle of the bike frame seems the ideal place to put the cells.&lt;/p&gt;

&lt;h4 id=&quot;design&quot;&gt;Design&lt;/h4&gt;

&lt;p&gt;How many cells could I get in there?  To answer this I modeled the bike in Fusion 360.  Getting precise measurements of all the curves was a challenge.  By cutting foam board until it fit snugly in the frame without gaps allowed me to draw a grid and translate it into CAD.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-04/6.png&quot; alt=&quot;CAD model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note a few things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The cells are nestled right in the curvature of the frame to make best use of space.&lt;/li&gt;
  &lt;li&gt;They are position as low as possible.  The cells are heavy.  The low position keeps the center of mass low increasing stability.&lt;/li&gt;
  &lt;li&gt;The cell caps get 3D printed.  They hold the cells firmly in place.&lt;/li&gt;
  &lt;li&gt;Bus bars are designed to connect the cells in the desired series/parallel configuration.&lt;/li&gt;
  &lt;li&gt;Although all the cells are cased together, the bus bars are designed to connect the cells into two isolated groups.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So how may cells?  Above we already determined that we’ll use 14 in series, and that there will be two packs.  So the total cell count has to be some multiple of 28.  It turns out that 140 cells is the most that would fit.  Two packs: 14s5p.&lt;/p&gt;

&lt;h4 id=&quot;3d-printed-caps-and-case&quot;&gt;3D Printed Caps and Case&lt;/h4&gt;

&lt;p&gt;How did I live without a 3D printer before?  What a useful tool!&lt;/p&gt;

&lt;p&gt;Here you can see the caps all printed and loaded with cells.  My printer had to manufacture them in three parts and then I glued them together.&lt;/p&gt;

&lt;p&gt;Most of the cells were rescued from the pack that fell off Justin’s scooter, hence the scratch marks from removing the previous welds.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-04/3.jpg&quot; alt=&quot;Printed Case&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;bus-bars&quot;&gt;Bus Bars&lt;/h4&gt;

&lt;p&gt;In the previous post we learned that copper, although an excellent conductor, is not ideal for bus bars.  I managed to find a supplier of pure nickel sheet metal.  It’s pricey!&lt;/p&gt;

&lt;p&gt;How do I cut the nickel into bus bars?  The machine shop wants one week to cut parts with their laser cutter.  The cost in time, money, and inconvenience is just too high.  I needed a solution where I could do fast prototyping and cut the parts on my own.  Carbon laser CNCs are affordable but they can’t cut metal.  Fiber laser CNCs cost $500k and are the size of a small bus.  So I researched CNC routers and decided to get a &lt;a href=&quot;https://carbide3d.com/shapeoko/&quot;&gt;Shapeoko&lt;/a&gt;.  These are fun!&lt;/p&gt;

&lt;p&gt;There’s a learning curve to CNC routers and it took me several attempts to get my bus bars cut properly.  It actually took a couple days of CNC-ing to get a complete set (30 pieces) cut.  If I had to do it again, I think it’d take maybe half a day knowing what I know now.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-04/2.jpg&quot; alt=&quot;CNC&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;cell-level-fuses&quot;&gt;Cell Level Fuses&lt;/h4&gt;

&lt;p&gt;The fallen pack from Justin’s scooter was good motivation to figure out cell-level fuses.  The principle here is that cells need protecting.  Not only will cell-level fuses protect the cells from overcurrent, but if a single cell shorts, it’s fuse will blow and it’s peers will not be drained.  Since my cells are rated for 10A, I wanted fuses that would blow just above 10A, like maybe 15A.&lt;/p&gt;

&lt;p&gt;Originally, I designed the fuses into my bus bars as 0.5mm legs holding onto a tab that would be welded to the cells.  However, the CNC router is a bit brutish and would rip that skinny legs out of position or cut them off entirely.  Turns out it wouldn’t have worked anyway.&lt;/p&gt;

&lt;p&gt;The 0.5mm leg width was based off calculations of nickel ampacity and some preliminary testing.  Further testing demonstrated that, although the nickle does indeed glow red hot with 15A of current, it just doesn’t melt!   Even if I increase current to 25A, it just glows hotter.  The connection remains and current continues to flow.  I redesigned the bus bars without the fuses.&lt;/p&gt;

&lt;p&gt;Based off tips from various Youtubers, I decided to try out resistor leads; the wire-ends on through-hole resistors.  It worked!  10A: nothing.  15A: they glow and melt.  Perfect!  Now, the thought of wasting resistors bugged me, so I figured out what about these wires make them work.  Turns out it’s the steel-plated solid copper wire.  Steel is a poor conductor (relatively) and it get’s hot enough to melt.&lt;/p&gt;

&lt;p&gt;I went online to buy a spool of this wire, but I guess it’s not all that common.  2 weeks for delivery was the best I could find.  I ordered it but 2 weeks is too long to wait.  Good thing I have a LOT of resistors!&lt;/p&gt;

&lt;p&gt;Welding those skinny wires to the cells was messy.  Even with some custom welding leads for the purpose, the little wires would flatten, kink, or even break sometimes.  After welding a dozen or so cells, I switched strategy.  By soldering the steel-plated wire across two nickel strips, the welding process was much more consistant.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-04/4.jpg&quot; alt=&quot;Cell Fuses&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;completed-packs&quot;&gt;Completed Packs&lt;/h4&gt;

&lt;p&gt;You can see below that I added all the sense wires, riveted on terminal plates, added connectors, cased it up and installed it in the bike.  It fits like a glove.&lt;/p&gt;

&lt;p&gt;Not visible is the kapton tape to insulate the bus bars and foam sheet to pad the cells from bumps and impacts.&lt;/p&gt;

&lt;p&gt;So far the packs work great.  The first few fuses (without nickel tips) did blow at one point, which is probabaly a good thing, so I replaced them with the improved nickel tipped version.&lt;/p&gt;

&lt;p&gt;All-in-all, these are my best packs yet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-04/1.jpg&quot; alt=&quot;Completed Pack&quot; /&gt;
&lt;img src=&quot;/eflight/img/2019-09-04/5.jpg&quot; alt=&quot;Pack in Bike&quot; /&gt;&lt;/p&gt;</content><author><name>Micah Martin</name></author><category term="eBike" /><category term="Batteries" /><summary type="html">Goals</summary></entry><entry><title type="html">Scooter Batteries</title><link href="http://micahmartin.com/2019/09/03/scooter-batteries.html" rel="alternate" type="text/html" title="Scooter Batteries" /><published>2019-09-03T00:00:00-07:00</published><updated>2019-09-03T00:00:00-07:00</updated><id>http://micahmartin.com/2019/09/03/scooter-batteries</id><content type="html" xml:base="http://micahmartin.com/2019/09/03/scooter-batteries.html">&lt;p&gt;My Brother Justin, recently purchased a used electric scooter, or more like a moped.  Unfortunately, the battery pack in the scooter died shortly after the purchase and Justin was left without transportation.  How sad.&lt;/p&gt;

&lt;p&gt;Fortunately, I had a pile of fresh 18650 cells along with my new BMS design.  So I offered to build him a new pack and in exchange he would share the data generated by the BMS/Batteries that’s I’d build.  It was a great opportunity test my equipment and learn more about electric vehicles.&lt;/p&gt;

&lt;h4 id=&quot;requirements&quot;&gt;Requirements&lt;/h4&gt;

&lt;p&gt;Since this is was meant to be a drop-in solution, I’d have to build packs with the same characteristics as his dead pack.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Voltage:  72V&lt;/li&gt;
  &lt;li&gt;Current:  130A&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My BMS can only handle 15 cells in series.  At 3.6V each, a single BMS can only deliver 54V nominal.  That means I’d have to build two packs and wire them up in series on the scooter.  Each pack would have 10 cells in series delivering 36V.&lt;/p&gt;

&lt;p&gt;The MJ1 cells are rated for 10A max. To achieve 130A, 13 cells in parallel are needed.&lt;/p&gt;

&lt;p&gt;That’s 2 packs of 10s13p configuration.  130 cells each.  260 cells total.  That’s about 3.3kWh of energy.&lt;/p&gt;

&lt;h4 id=&quot;bus-bars&quot;&gt;Bus Bars&lt;/h4&gt;

&lt;p&gt;130A is way more than I’d every dealt with before.  The skateboard was a 30A system and I had to stack nickel strips to safely handle that meager current.  Stacking enough nickel strips to handle 130A seemed like a shoddy solution.  Instead, I headed over to the local metal supply store and purchased some 6mm thick copper sheet metal.&lt;/p&gt;

&lt;p&gt;In Fusion 360, I modeled the packs along with bus bars to connect the cells in the 10s13p configuration.  The question was, “How am I gonna cut that thick copper into the detailed CAD shapes?”&lt;/p&gt;

&lt;p&gt;I called a few machine shops and drove my copper over.  The guys at &lt;a href=&quot;https://www.steelcrestonline.com/&quot;&gt;SteelCrest&lt;/a&gt; were great!  They welcomed my in and conveniently cut my parts on the spot with their fiber laser cutter.  What a beast of a machine!  Check out the video below while my copper parts are laset cut.&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/357714358&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Here’s the freshly cut bus bars fitting perfectly in the 3D printed cases I made.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-03/2.jpg&quot; alt=&quot;Copper Bus Bars&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;welding&quot;&gt;Welding&lt;/h4&gt;

&lt;p&gt;As it turns out, copper was not the best choice of material for the bus bars.  Why?  Because nickel doesn’t weld to copper, at least not with the spot welder I have.  Nickel is needed to connect the individual cells.&lt;/p&gt;

&lt;p&gt;I ended up plating the copper with solder.  Spot welding the nickel to the solder did work, kinda.  In the end I reinforced the spot welds with some solder welds (only on the bus bars so as not to heat the cells).  The whole process made for lots of extra work.  But it should easily handle the 130A and then some!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-03/3.jpg&quot; alt=&quot;Pack Nearly Complete&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;fallen-soldier&quot;&gt;Fallen Soldier&lt;/h4&gt;

&lt;p&gt;In the picture below, Justin and I installed new cells in his scooter.  My two packs consumed significantly less volume than the previous pack.&lt;/p&gt;

&lt;p&gt;Removing the original pack was by far the hardest part of the job.  Is was NOT meant to come out.  We had to disassemble most of the bike and use 2x4’s as crowbars to force the pack out.&lt;/p&gt;

&lt;p&gt;Meanwhile, I had placed the new packs on the luggage rack of the scooter.  That was hollow headed.  As we yanked and cranked to get the old pack out, my new packs fell to the concrete floor.  &lt;em&gt;Wince&lt;/em&gt;.  I tested the voltage and all seemed well.  It wasn’t.  A week later Justin measured the voltage again and it was low.  3.6V low.&lt;/p&gt;

&lt;p&gt;One of the cells took the brunt of the fall and shorted internally.  Not enough to explode or burn or even notice at first.  But it was enough to drain itself and the other 12 cells in it’s group.  There was little do do about it.  I built Justin another pack to replace it.&lt;/p&gt;

&lt;p&gt;This is the type of problem that cell-level fuses would have prevented.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-09-03/1.jpg&quot; alt=&quot;Justin's Scooter&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;accidental-arc-welding&quot;&gt;Accidental Arc Welding&lt;/h4&gt;

&lt;p&gt;We wired up the BMS, connected ground to the scooter’s steele chassis, and then there was just the positive lead to connect.  Justin’s fiance Ela (who is now is wife) just arrived and I remarked to them, “This is where it get’s interesting.”  In my experience, motor controllers have beefy capacitors and when you close the circuit, there’s an frightening arc of glowing electrons.&lt;/p&gt;

&lt;p&gt;At arm’s length I gingerly touched the positive lead of the controller to the corresponding lead on the BMS expecting sparks.  But nothing!  “Cool!”, I said as I relaxed, not realizing that my uninsulated connector was inches from touching the chassis.  That is until it did touch.&lt;/p&gt;

&lt;p&gt;72 volts with virtually no impedance except the steel chassis.  SPARKS EVERYWHERE!!!  Blinding light!  Crackling thunder!  I jumped back, as did Justin and Ela.  Thank goodness the cable was loose and the circuit opened once I let go of it.  The steel tubing had melted and a coin sized gouge was left behind.  Not enough structural damage to warrant repair though.&lt;/p&gt;

&lt;h4 id=&quot;results&quot;&gt;Results&lt;/h4&gt;

&lt;h5 id=&quot;the-good-news&quot;&gt;The Good News&lt;/h5&gt;

&lt;p&gt;The packs worked!  Justin was on the road again, cruising the streets of Austin.&lt;/p&gt;

&lt;p&gt;Before, Justin was lucky to get 20 miles on the scooter before a recharge was needed.   With the new packs, he estimates he could go 100 miles before needing to charge.&lt;/p&gt;

&lt;h5 id=&quot;the-bad-news&quot;&gt;The Bad News&lt;/h5&gt;

&lt;p&gt;1) The original charger that was built into the scooter didn’t work.  We had to cut some CAN wires during the replacement and these provided important communications that we were not going to reverse-engineer.  Justin also lost his built-in battery gauge because of these cut wires, but I built him a separate display to go along with the packs.&lt;/p&gt;

&lt;p&gt;2) The BMS software needed tweaking.  For various reasons, while Justin is riding, the BMSs’ safety measures kick in and cut power.  When it happens, Justin has to pull over and restart the bike, although he’s gotten pretty good at hot-starting it while on the roll.  It’s not until it happens that we can analyse the logs and see why it happens.  So the debugging process is a bit pain-staking.&lt;/p&gt;

&lt;p&gt;3) One of the BMS units got fried.  The speed controller is a black box.  We don’t know exactly how it works or why it does the things it does.  At one point it produced a voltage spike that destroyed some electronics.  A new BMS was built and we’ll have to see if we can prevent that from happening again.&lt;/p&gt;

&lt;p&gt;All-in-all, a good learning experience.&lt;/p&gt;</content><author><name>Micah Martin</name></author><category term="Batteries" /><summary type="html">My Brother Justin, recently purchased a used electric scooter, or more like a moped.  Unfortunately, the battery pack in the scooter died shortly after the purchase and Justin was left without transportation.  How sad.</summary></entry><entry><title type="html">eBike: Completed</title><link href="http://micahmartin.com/2019/08/28/ebike-completed.html" rel="alternate" type="text/html" title="eBike: Completed" /><published>2019-08-28T00:00:00-07:00</published><updated>2019-08-28T00:00:00-07:00</updated><id>http://micahmartin.com/2019/08/28/ebike-completed</id><content type="html" xml:base="http://micahmartin.com/2019/08/28/ebike-completed.html">&lt;p&gt;This electric bike is finished!  I know I haven’t mentioned it before, but it is a key learning step toward building the electric plane.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-08-28/1.jpg&quot; alt=&quot;Final&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;back-story&quot;&gt;Back Story&lt;/h4&gt;

&lt;p&gt;There a lot to talk about with this bike, and I haven’t blogged any of it.  In future blogs I’ll break it down and focus on lessons learned and interesting details.&lt;/p&gt;

&lt;h4 id=&quot;ebike-features&quot;&gt;eBike Features&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sikk.com/mens-ufo.html&quot;&gt;Sikk Fat Tire Cruise Bike&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;140 cell custom battery pack.  Two 14s5p groups working in parallel to produce 50.4V (nominal) at upto 100A&lt;/li&gt;
  &lt;li&gt;2x “FlexBMS” Battery Management Systems.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnqsmotor.com/en/article_read/QS%20Motor%20205%2050H%20V3%20Motor%203000W%20Electric%20High%20Power%20Bike%20Spoke%20Hub%20Motor/259.html&quot;&gt;3kW BLDC Hub Motor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/QSMOTOR-SVMC72200-controller-3000W-4000W-Controller/dp/B07DC2987H/ref=sr_1_1&quot;&gt;3-4kW DC Controller/Inverter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.raspberrypi.org/products/raspberry-pi-4-model-b/&quot;&gt;Raspberry PI 4&lt;/a&gt; as central control of the system&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/GeeekPi-Monitor-Resistive-Interface-Raspberry/dp/B01L6O2NEE/ref=sr_1_3&quot;&gt;5” touch screen&lt;/a&gt; for user interface&lt;/li&gt;
  &lt;li&gt;Headlights&lt;/li&gt;
  &lt;li&gt;Tail lights with brake lights&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;performance&quot;&gt;Performance&lt;/h4&gt;

&lt;h5 id=&quot;top-speed&quot;&gt;Top Speed:&lt;/h5&gt;

&lt;p&gt;Officially, 20 MPH, because that’s the law for electric bikes.  Unofficially, I may have exceeded 40 MPH.&lt;/p&gt;

&lt;h5 id=&quot;rangeendurance&quot;&gt;Range/Endurance:&lt;/h5&gt;

&lt;p&gt;I estimate it’s more than 50 miles.  The bike was completed this morning and fully charge. Today I rode about 27 miles and the batteries are at about 70% of the top of their voltage range.  Exact watt hours are challenging to calculate.&lt;/p&gt;

&lt;h5 id=&quot;manual-pedaling&quot;&gt;Manual Pedaling:&lt;/h5&gt;

&lt;p&gt;Undesirable! There have been a few unfortunate test rides where I was miles from home and without electric propulsion.  Basically the bike broke for some reason or another and I had to pedal home.  The bike is heavy!  Maybe 100lbs.  By the time I’d get home, I’d be drenched in sweat.&lt;/p&gt;

&lt;h4 id=&quot;versions&quot;&gt;Versions&lt;/h4&gt;

&lt;p&gt;The picture above is the most recent version of the eBike, but it is not the first, or second.  Below is a picture of the first version.  It was a primitive configuration with a sad BDLC motor bolted to the frame and driving the rear wheel via an awkward chain.&lt;/p&gt;

&lt;p&gt;Although version 1 was a blast to ride as you can see in the video as my good friend Skim gives it a go, the bike has improved a great deal since then.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-08-28/2.jpg&quot; alt=&quot;First Version&quot; /&gt;&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/356561354&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>Micah Martin</name></author><category term="eBike" /><summary type="html">This electric bike is finished!  I know I haven’t mentioned it before, but it is a key learning step toward building the electric plane.</summary></entry><entry><title type="html">Building a BMS</title><link href="http://micahmartin.com/2019/02/08/building-a-bms.html" rel="alternate" type="text/html" title="Building a BMS" /><published>2019-02-08T00:00:00-07:00</published><updated>2019-02-08T00:00:00-07:00</updated><id>http://micahmartin.com/2019/02/08/building-a-bms</id><content type="html" xml:base="http://micahmartin.com/2019/02/08/building-a-bms.html">&lt;p&gt;To summarize the 4 months since my last post:  I’ve been educating myself.  Primarily, my time has been spent learning how to build a BMS (Battery Management Sysytem).  And there was a lot for me to learn.&lt;/p&gt;

&lt;p&gt;There were several attempts at a BMS that I’d like to share with you.&lt;/p&gt;

&lt;h4 id=&quot;1-voltage-dividers&quot;&gt;1) Voltage Dividers&lt;/h4&gt;

&lt;p&gt;With Chuck Studee’s guidance, the first problem we wanted tackle was measuring the voltage of all the cells.  Fortunately, the Arduino can sense voltage on one of its analog pins.  It’s often referred to as an ADC (Analog to Digital Converter).  It can measure up to 5V.&lt;/p&gt;

&lt;p&gt;But here’s the rub.  The pack has 10 cells in series, delivering 42V from Pack- to Pack+ when fully charged.  There’s a lead from each cell’s + terminal and if we take a multimeter to each lead, from Pack-, we’ll read the following voltages down the line: 4.2, 8.4, 12.6, 16.8, 21, 25.2, 29.4, 33.6, 37.8, 42.   Assuming we use Pack- as ground for the Arduino (otherwise we have floating voltages: bad), we can read the 4.2V from the first cell, but all the rest are too high!&lt;/p&gt;

&lt;p&gt;Well, we can use &lt;a href=&quot;https://learn.sparkfun.com/tutorials/voltage-dividers/all&quot;&gt;Voltage Dividers&lt;/a&gt; to solve that problem.  By connecting a voltage source to ground through two resistors in series, the voltage measured in between the two resistors will be divided according to this formula:  Vout = Vin * R2 / (R1 + R2).  So if we can divide our voltages by 10, then the max 42V turns into 4.2V.  Nice!  However, I didn’t have the resistors to divide by 10, so we divided by 11. R1 = 10k and R2 = 1k.&lt;/p&gt;

&lt;p&gt;Easy, right?  Well, problem is now we’ve got 11 leads from the battery pack, and not enough ADC pins on the Arduino.  Ideally we use 1 ADC pin to measure all the voltages.  So we use a multiplexer to programmatically choose which lead we want to read from.  Except we need two multiplexers so that we can read the voltage between the leads on both sides of an individual cell.  This give more precision.  So then we need a Differential Amplifier.  The outputs from that are small, so we use an Instrumental Amplifier to make the recision easier to read on the ADC pin.&lt;/p&gt;

&lt;p&gt;But there’s more:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A Differential Amplifier is use to measure the difference between the two leads we multiplex into it.&lt;/li&gt;
  &lt;li&gt;A Instrumental Amplifier is then needed to precisely multiple the smal voltages we get from the Diff Amp.&lt;/li&gt;
  &lt;li&gt;A Linear Voltage Converter is used to feed the ADC’s reference voltage down to ~4.2V.&lt;/li&gt;
  &lt;li&gt;A Buck Converter is used to reduce the pack’s voltage to a nice 7V that the Arduino can use.&lt;/li&gt;
  &lt;li&gt;Diodes protect the cell leads&lt;/li&gt;
  &lt;li&gt;A OLED screen displays the readings&lt;/li&gt;
  &lt;li&gt;A push button Rotary Enccoder allows user inputs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AND… IT WORKED!  The circuit measured the voltage of each cell with relatively good accuracy.  Nice.  And then I thought “How do we balance cells now?”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-02-08/2.jpg&quot; alt=&quot;Voltage Dividers&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-flying-capacitor&quot;&gt;2) Flying Capacitor&lt;/h4&gt;

&lt;p&gt;That first circuit allowed no means to balance cells. And along the way, I read about a “Flying Capacitor” technique I wanted to try.  The principle is that you connect both leads of a single cell to a capacitor, charge the capacitor, then disconnect.  The capacitor now holds the voltage of the cell.  You can then connect the capacitor to the ADC (and ground) to read the cell’s voltage.  Or, you could connect that charged capacitor up to a power resistor and effectively drain the cell.  Or, you could charge the capacitor with a full cell, and then connect it to a less full cell.  Either way, this Flying Capacitor solves the problem of voltage measuring and balancing.&lt;/p&gt;

&lt;p&gt;The problem with this technique is that all the connections to the Flying Capacitor needs to be isolated.   If any of the components get connected to the capacitor at the same time, or if they happen to share a ground at some point, they fry.  I have a bin of burnt parts to prove it. To isolate the circuits I used a device called an Opto-Fet or Photo-MOS. It has four leads with an LED embedded in the chip.   When the LED is powered, the other two leads are connected.  Both sides of the opto-fet are totally isolated from each other.&lt;/p&gt;

&lt;p&gt;With a fleet of these opto-fets, the circuit was able to measure voltage accurately, but the rate of balancing was abysmal.  It turns out that charging and discharging a capacitor over and over is not very efficient.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-02-08/3.jpg&quot; alt=&quot;Optofets&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;3-bms-chip&quot;&gt;3) BMS Chip&lt;/h4&gt;

&lt;p&gt;The BMS problem has been solved before.  Texas Instruments offers an amazing chip that does everything I was trying to do and more in a package smaller than a dime.  The BQ76940. I ordered an evaluation kit and started playing with it.  It worked great!  So I started to build a circuit on a breadboard using this chip.  I even designed a little PCB (printed circuit board) to adapt this surface mounted chip to 2.54mm pins.&lt;/p&gt;

&lt;p&gt;My breadboard circuit was working somewhat, but only after wiring up almost all of the 44 pins on the BQ76940.  The circuit had become overwhelming for a breadboard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-02-08/4.jpg&quot; alt=&quot;BQ76940 attempt&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;4-pcb&quot;&gt;4) PCB&lt;/h4&gt;

&lt;p&gt;Based on the forum posts, I felt like the only fool to try and wire up the BQ76940 on a breadboard.  I bit the bullet and started designing my own PCB.  This was a week long adventure and I feel good about the result.  The PCB is currently being fabricated and all the surface mounted chips are on order.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2019-02-08/1.jpg&quot; alt=&quot;PCB&quot; /&gt;&lt;/p&gt;</content><author><name>Micah Martin</name></author><category term="Battery" /><summary type="html">To summarize the 4 months since my last post:  I’ve been educating myself.  Primarily, my time has been spent learning how to build a BMS (Battery Management Sysytem).  And there was a lot for me to learn.</summary></entry><entry><title type="html">Cell Authenticity</title><link href="http://micahmartin.com/2018/10/16/cell-authenticity.html" rel="alternate" type="text/html" title="Cell Authenticity" /><published>2018-10-16T00:00:00-07:00</published><updated>2018-10-16T00:00:00-07:00</updated><id>http://micahmartin.com/2018/10/16/cell-authenticity</id><content type="html" xml:base="http://micahmartin.com/2018/10/16/cell-authenticity.html">&lt;p&gt;Li-ion cells, especially 18650 cells, are ripe for fraud.  They are such a commodity these days that sketchy distributors can make a handy profit by wrapping cheap low-quality cells in name brand skins and selling them for a premium.  They get creative.  Sometimes they’ll take low-end cells from a certain name brand, re-wrap them as high-end cells of the same brand and sell them.  Sometimes they’ll take an order of authentic cells and radnomly replace some of the cells with frauds.&lt;/p&gt;

&lt;p&gt;I want authentic cells going into my airplane.  So I’ve been testing the cells that I recently received.  These are LG Chem, MJ1 cells.  LG Chem publishes a product specification that describes the attributes and performance characteristics of their cells.  We can test our cells against these specifications.  I’ve been taking sample cells at random from the packing that they came in and testing them.  Here’s a sample of my data.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;case&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;out of box V&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;weight (g)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;charged voltage&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;capacity @0.5mA (mAh)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;capacity @0.2C&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;capacity @1C&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;% loss 0.2 - 1C&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.599&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.139&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3783&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3410&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3330&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.35%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.599&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.144&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3728&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3430&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.599&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.142&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3864&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.599&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.141&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3719&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.601&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.139&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3753&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3410&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3290&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.52%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.601&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;46&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.139&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3701&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3410&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.601&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;46&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.145&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3828&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.600&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;46&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.146&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3701&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;9&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.599&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.150&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3778&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3400&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3250&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.41%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.599&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.155&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3722&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3460&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;11&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.599&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.150&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3853&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.599&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.150&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3702&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;13&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.599&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.141&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3771&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3410&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3320&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.64%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;14&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.600&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;46&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.142&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3709&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3410&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;15&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.599&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;46&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.145&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3865&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;16&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.599&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.147&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3696&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3310&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;appearance&quot;&gt;Appearance&lt;/h5&gt;

&lt;p&gt;MJ1 cells are wrapped in green PVC, printed with identification, and “no defects such as deep scratch, rust, discoloration or leakage”.  Not only do all the cells match the specification, but they are beautifully smooth, clean, and shiny.&lt;/p&gt;

&lt;h5 id=&quot;dimensions&quot;&gt;Dimensions&lt;/h5&gt;

&lt;p&gt;The 18650 category of cells are so named because they are 18mm in diameter and 65mm in length.  MJ1’s are actually 18.4mm in diameter though.  The specifications allow a tolerance of +0.1/-0.3mm in diameter and +-0.2mm in length.  A quick measurement of a few cells confirms the dimensions, and with all the cells lined up in the packaging, it’s easy to confirm that they are all identical.&lt;/p&gt;

&lt;h5 id=&quot;weight&quot;&gt;Weight&lt;/h5&gt;

&lt;p&gt;The specs say each cell should weight a max of 49g.  My data indicates an average of roughly 46.5g.&lt;/p&gt;

&lt;h5 id=&quot;nominal-voltage&quot;&gt;Nominal Voltage&lt;/h5&gt;

&lt;p&gt;Specs: 3.635V.  This is not something I can simply measure.  It’s more of a calculation… the average voltage during a standard discharge.  But I can measure the voltage of the cells as I pull them out of the factory packaging.  The manufacture delivers the cells at a state of charge that is ideal for shipping.  They’re not full and they’re not empty.  And they happen to be quite close to the nominal voltage.  What’s remarkable is how consistent the voltages are: 3.600V += 0.001V.  Amazing!  That indicates a high quality manufacturing process.&lt;/p&gt;

&lt;h5 id=&quot;maxmin-voltage&quot;&gt;Max/Min Voltage&lt;/h5&gt;

&lt;p&gt;The specs give a Max cell voltage of 4.2V and a Min of 2.5V.  Now, these are not so much specifications as they are instructions for the user.  One could charge a cell above 4.2V and one could discharge a cell below 2.5V. But one really shouldn’t lest they desire exploding cells (worst case scenario).&lt;/p&gt;

&lt;h5 id=&quot;capacity&quot;&gt;Capacity&lt;/h5&gt;

&lt;p&gt;Specs:  Nominal: 3500 mAh.  Minimum: 3400 mAh.  And as I understand it, manufacturers are optimistic about their “nominal” capacity.  We should expect to see capacities just above the minimum.&lt;/p&gt;

&lt;p&gt;Up to this point, testing the authenticity of the cells has been easy.  Testing capacity required considerable more effort on my behalf.&lt;/p&gt;

&lt;p&gt;I have a &lt;a href=&quot;https://www.amazon.com/Charger-Display-Intelligent-Battery-Batteries/dp/B071GKZB2G/ref=sr_1_24&quot;&gt;cheap 18650 charger&lt;/a&gt; that tests cell capacity.  As I &lt;a href=&quot;/eflight/2018/10/02/voltage-alarm.html#testing-battery-authenticity&quot;&gt;describe in the previous blog&lt;/a&gt;, the device gave results averaging around 3750 mAh.  That’s higher then the specs say because the charger only runs at 0.5A where as the specs say a standard discharge rate is 0.2C (0.68A).&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.amazon.com/gp/product/B07F3NHHST/ref=oh_aui_search_detailpage?ie=UTF8&amp;amp;psc=1&quot;&gt;constant current load tester&lt;/a&gt; that I got off Amazon allowed me to drain the batteries at a precise rate of my choosing.  So I gave it a shot.  See below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2018-10-16/2.jpg&quot; alt=&quot;Initial Test Setup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That test was performed on a cell that I identified as #16.  The resulting capacity at the “standard discharge rate” was 3310 mAh.  Too low! Well, after inspecting the setup, I attribute the error to the poor connections of that cell holder along with it’s skinny wires. We were experiencing voltage sag.&lt;/p&gt;

&lt;p&gt;I’ve found that spot welding Nickel strips onto the terminals of the cells gives a much better contact.  Nickel strips were welded to all the other test cells.&lt;/p&gt;

&lt;h5 id=&quot;stopping-the-capacity-test&quot;&gt;Stopping the Capacity Test&lt;/h5&gt;

&lt;p&gt;In &lt;a href=&quot;/eflight/2018/10/02/voltage-alarm.html#testing-battery-authenticity&quot;&gt;my last blog&lt;/a&gt;, I tell the whole story about how I compromised the integrity of a few cells because the load tests doesn’t stop draining the batteries, and how I solved the problem by creating a voltage alarm circuit to disconnect the load tester when the minimum voltage is detected.&lt;/p&gt;

&lt;p&gt;The next photo below shows the combined setup with the load tester and the voltage alarm circuit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2018-10-02/5.jpg&quot; alt=&quot;Final Test Setup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This setup worked great.  It protected the cells and gave accurate results which match the specifications.&lt;/p&gt;

&lt;h5 id=&quot;high-rate-discharge&quot;&gt;High Rate Discharge&lt;/h5&gt;

&lt;p&gt;The standard discharge rate yields relatively low power levels.  When these cells are installed in an airplane, they will need to deliver significantly more power.  So I ran so capacity tests at higher discharge rates.&lt;/p&gt;

&lt;p&gt;At 1C (3.4A), the load tester barely got warm.  You can see that it has a nice fan surrounded by a hugh surface area of colling fins.  That’s a repurposed CPU cooling system for computers.  My little voltage alarm circuit however has no such cooling system.  The MOSFET, through which all the battery current passes, got scolding hot.  Only a few seconds in to the first 1C test I touched the MOSFET and sizzled my finger tip, just a bit.  After installing some tiny cooling fins and placing a USB fan over the top its temperature stabilized at about 110º Celsius.&lt;/p&gt;

&lt;p&gt;I was comforted to see that the loss of capacity due to higher rates of discharge was minimal.  Only about 4% capacity loss.&lt;/p&gt;

&lt;p&gt;The specs give a max discharge rate of 10A.  For this test I didn’t bother using the voltage alarm.  And I figured I had the patience to wait for the 20 minutes it would take to discharge the cell so I didn’t need it.  I took a thermal image of the cell under test and you can see that it got pretty warm too!  Over 50º C.  Li-ion cells are not perfect power supplies.  They contain internal impedance which causes them to warn up under high loads.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2018-10-16/1.jpg&quot; alt=&quot;10A Test&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h5&gt;

&lt;p&gt;The capacity testing is time consuming with each standard rate test taking 5 hours.  So although I am continuing with random testing, I have collected enough data at this point to claim with a high level of certainty that the cells I have are authentic.  -* thumbs up *-&lt;/p&gt;</content><author><name>Micah Martin</name></author><category term="Battery" /><summary type="html">Li-ion cells, especially 18650 cells, are ripe for fraud.  They are such a commodity these days that sketchy distributors can make a handy profit by wrapping cheap low-quality cells in name brand skins and selling them for a premium.  They get creative.  Sometimes they’ll take low-end cells from a certain name brand, re-wrap them as high-end cells of the same brand and sell them.  Sometimes they’ll take an order of authentic cells and radnomly replace some of the cells with frauds.</summary></entry><entry><title type="html">Voltage Alarm</title><link href="http://micahmartin.com/2018/10/02/voltage-alarm.html" rel="alternate" type="text/html" title="Voltage Alarm" /><published>2018-10-02T00:00:00-07:00</published><updated>2018-10-02T00:00:00-07:00</updated><id>http://micahmartin.com/2018/10/02/voltage-alarm</id><content type="html" xml:base="http://micahmartin.com/2018/10/02/voltage-alarm.html">&lt;p&gt;It’s been nearly a month since my last post!  Why?  Well, there’s been lots to learn.&lt;/p&gt;

&lt;h4 id=&quot;testing-battery-authenticity&quot;&gt;Testing Battery Authenticity&lt;/h4&gt;

&lt;p&gt;In the &lt;a href=&quot;/eflight/2018/09/07/batteries-faraday-first.html&quot;&gt;last post&lt;/a&gt;, you saw a picture of 3000 Li-ion batteries that arrived.  Although the vendor has a good reputation and seems trust worthy, it seemed like a good idea to test the authenticity of the cells.  I’ll dive into the details of how that was accomplished in another post.  But there was one attribute of the batteries that gave me the most trouble.  Capacity.&lt;/p&gt;

&lt;p&gt;According the specs, the MJ1 cells should have a capacity of 3400 - 3500 mAh.  Conveniently, my relatively cheap 18650 charger has a “test” mode to measure the capacity of the cells.  It does this in three steps:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 fully charge the cell
2 fully drain the cell
3 fully charge the cell again
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The process takes about a day, and it can handle 4 cells simultaneously.  Odd thing is, it gave results in the 3700 - 3900 mAh range, more than advertised!  Hmm.  Why’s that?  Well, the charger can only run the test at a rate of 500 mA.  That is, when it drains the cell, it will do so by drawing a current of 500 mA until the cell reaches the “minimum voltage”.  The interpretation of minimum voltage my be another source of error.  But anyway, the capacity of a Li-ion cell changes based on the rate at which current is drawn.  So if a large current is drawn from a cell, it will have less capacity than if a small current is drawn.&lt;/p&gt;

&lt;p&gt;MJ1 cells should yield 3400 mAh when discharged at 0.2C, or 0.68 A.  So to test these cells properly, I need to pull a constant 0.68A from them for 5 hours straight.  How does one do that?  I pondered that quastion for several days (while the cells were on the charger) and considered several options:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Take them to a profesional battery testing facility (Weak!)
* Build an Arduino-based circuit to do it (Don't know enough about electronics yet.  Also, time consuming.)
* Acquire battery testing hardware (Expensive.)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;While on searching on Amazon, I stumbled across &lt;a href=&quot;https://www.amazon.com/gp/product/B07F3NHHST/ref=oh_aui_search_detailpage?ie=UTF8&amp;amp;psc=1&quot;&gt;this device&lt;/a&gt; in the picture below.  It’s a constant current “load tester” device, a simple, cheap one from China.  But it does exactly was I need, for ~$40.  What a bargain!  And it works as advertised.  One minor problem is that it doesn’t know when to stop.&lt;/p&gt;

&lt;p&gt;So I set up the device in my office, plug in a cell, and set a timer for 4.5 hours.  When the timer goes off, I check on the device and it’s doing great.  The cell voltage is getting near the minimum of 2.5V and the measured capacity is at about 3100 mAh.  Awesome!  Just a few more minutes.  So I hang out in my office finding things to keep me busy… a bit too busy.  I miss the 2.5V cutoff, the device continues to drain the cell and by the time I realize it was below 2V.  Whoops.  Well, I’ll catch the next one.  Except I didn’t.  It got down to 1.5V before I realized.  (To be continued… below)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2018-10-02/2.jpg&quot; alt=&quot;DC Load Tester&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;electronics-apprenticeship&quot;&gt;Electronics Apprenticeship&lt;/h4&gt;

&lt;p&gt;Meanwhile, in other news…. My electrical skills are modest, at best.  I’ve dabbled with micro-controllers, hobby boards, and simple circuits.  But I had to level up on electronics in order to &lt;a href=&quot;http://micahmartin.com/onex/onex/2017/09/22/tangled.html&quot;&gt;wire the OneX&lt;/a&gt;.  To build this electric plane, I’m going to need to level up a few more times in my electrical craftsmanship.&lt;/p&gt;

&lt;p&gt;For those who know my background, it’s no surprise that I sought out a mentor for my apprenticeship in electronics.  And I was fortunate enough to find one.  &lt;a href=&quot;https://www.linkedin.com/in/charles-studee-a2ba371/&quot;&gt;Chuck Studee&lt;/a&gt; is an old friend of my father.  They worked together at &lt;a href=&quot;https://www.teradyne.com/&quot;&gt;Teredyne&lt;/a&gt; where my dad was a software guy and Chuck was a hardware guy.  As a child I remember being fascinated by Chuck’s basement laboratory filled with electrical components, soldering irons, multimeters, oscilliscope, and other gizmos and gadgets.  So I reached out to him.&lt;/p&gt;

&lt;p&gt;Chuck has been an amazing mentor.  He’s full of great stories and depths of knowledge.  One of the first things he advised me to do was equip my very own laboratory, stocked with what Chuck calls “jelly bean” parts; resistors, capacitors, transistors, etc. that are commonly used. See the picture below.  Being so well equipped has already proved extremely valuable.&lt;/p&gt;

&lt;p&gt;I have a backlog of learning experiments to run.  Chuck will think of interesting circuits, like Darlington transistor configuration, or an opamp constant current source. We’ll talk about them over the phone and then Chuck will email me a little circuit to wire up and play with.  I find these experiments essential for learning.  They’re full of surprises.  I mean, I’ve recently read electronics books and I’m familiar with the theory, but each time I play with the hands-on examples I learn something new.  Sometimes they perplex me so call Chuck and he walks me through it.&lt;/p&gt;

&lt;p&gt;With my newly acquired skills, it was time to build a real circuit…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2018-10-02/3.jpg&quot; alt=&quot;Electronics Lab&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;circuit-diagrams&quot;&gt;Circuit Diagrams&lt;/h4&gt;

&lt;p&gt;Back to testing the cell capacity…  Draining Li-ion cells below their minimum voltage is not good.  Bad things happen.  Fire, explosions…  So continuing to use the constant current device is not an option.  Not unless I’m alerted when the battery is empty (at 2.5V).  Hmm… I could build a circuit like that. Use an Arduino to track the cell voltage and sound a piezo buzzer when it gets down to 2.5V.  Or better yet, in addition to a buzzer, this “Voltage Alarm” could open the circuit to the load tester and stop the current flow.  Perfect!&lt;/p&gt;

&lt;p&gt;I sketch a circuit that includes an Arduino Nano, a passive piezo buzzer, and a FET (field effect transistor) to open/close the load circuit.  And to make the voltage alarm more flexible, and for the fun of it, I include a user interface made of a 16x2 LCD screen and a rotary encoder, the push button kind.  I send the picture below to Chuck.  He sends back a similar sketch of a circuit, but one that might actually work.&lt;/p&gt;

&lt;p&gt;While I’m writing about circuit diagrams, I’ll point out the computer generated schematic (second image below) which is the final representation of the Voltage Alarm.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2018-10-02/6.jpg&quot; alt=&quot;Circuit Sketch&quot; /&gt; 
&lt;img src=&quot;/eflight/img/2018-10-02/7.png&quot; alt=&quot;Final Circuit&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;arduino-coding&quot;&gt;Arduino Coding&lt;/h4&gt;

&lt;p&gt;Rather than wire things up, I retreated into my comfort zone; code.  C++ code in fact.  It ain’t no Clojure or  Ruby, but it’s what the Arduino takes; C++.  I discovered &lt;a href=&quot;https://github.com/google/googletest&quot;&gt;Google Test&lt;/a&gt;, a C++ unit testing framework, and started whipping out code.  I may have gotten carried away, building a whole menu structure with configurable settings.  The LCD screen can display two rows of text 16 characters wide.  And the rotary encoder allows you to navigate the menus by spinning clockwise to scroll down, counter-clockwise to scroll up, and puth-button to select an item.  Pretty sweet!&lt;/p&gt;

&lt;p&gt;Over about 2 weeks, the circuit came together.  Bit by bit, I’d piece together the hardware to make sure the code would run.  At one point, everything stopped working.  On power up, things would start ok, but then the LCD would display garbage and the Arduino would freeze or reboot over and over.  Nothing would fix it except commenting out code that had previously been working fine.  Wierd!  Turns out I was running out of memory.  The Nano has 2k of SRAM, stack and heap combined.  My style of programming was apparently quite wasteful with memory.  I switched gears and rafactored the code to be very conservative.  By the time the entire program was implemented, I had 308 bytes to spare!&lt;/p&gt;

&lt;p&gt;Below is the completed circuit prototype on a couple breadboards.  It worked, mostly.  The connections on the breadboards are not great and the jumper wires and alligator clips make for flimsy circuits.  There were hugh voltage sags between the battery and the load tester with jumpy readings.  Nothing a little solder can’t fix, I hoped.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2018-10-02/4.jpg&quot; alt=&quot;Breadboard&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;final-wiring&quot;&gt;Final Wiring&lt;/h4&gt;

&lt;p&gt;With the prototype circuit working, I documented the circuit in the schematic above.  Choosing the right software was a process of it’s own.  Research led me to believe that &lt;a href=&quot;https://www.autodesk.com/products/eagle/overview&quot;&gt;Eagle&lt;/a&gt;, owned by AutoDesk, is the standard.  That was good news because I really like AutoDesk’s Fusion 360 CAD tool.  I’ve been using Eagle but it’s a bit heavy and seams geared toward final printed circuit board design.  I also tried &lt;a href=&quot;https://www.circuitlab.com/&quot;&gt;CircuitLab&lt;/a&gt; (it was quick to demand money) and few other tools.  For now I’ve settled on &lt;a href=&quot;https://easyeda.com/&quot;&gt;EasyEDA&lt;/a&gt;.  It’s easy to use, has all the feature I should need, and it’s free!&lt;/p&gt;

&lt;p&gt;Wiring and soldering the final circuit of the Voltage Alarm was a 20 hour project.  More time than I imagined.  Of course I made newbie mistakes and had to redo several parts.  And it didn’t work the first time, or second time.  But after debugging the all the wiring problems, it did work.  The voltage sag was gone.  I could finally test the battery cells without draining them too much.&lt;/p&gt;

&lt;p&gt;It only took three weeks to get to that point!  &lt;em&gt;-sigh of lamentation-&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The first picture below is a running test with my Voltage Alarm hooked up to the battery and the constant current load tester.  The second is a close up of the Voltage Alarm in the “ALM” (alarm) state. Finally, there’s a video showing how it works at the bottom.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2018-10-02/5.jpg&quot; alt=&quot;Test Setup&quot; /&gt;
&lt;img src=&quot;/eflight/img/2018-10-02/1.jpg&quot; alt=&quot;Completed Circuit&quot; /&gt;&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/292998666&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>Micah Martin</name></author><category term="Battery" /><summary type="html">It’s been nearly a month since my last post!  Why?  Well, there’s been lots to learn.</summary></entry><entry><title type="html">Batteries &amp;amp; Faraday First</title><link href="http://micahmartin.com/2018/09/07/batteries-faraday-first.html" rel="alternate" type="text/html" title="Batteries &amp; Faraday First" /><published>2018-09-07T00:00:00-07:00</published><updated>2018-09-07T00:00:00-07:00</updated><id>http://micahmartin.com/2018/09/07/batteries--faraday-first</id><content type="html" xml:base="http://micahmartin.com/2018/09/07/batteries-faraday-first.html">&lt;h4 id=&quot;batteries&quot;&gt;Batteries!&lt;/h4&gt;

&lt;p&gt;They arrived today.  3,000 LG Chem MJ1 cells.  These are 18650 Li-ion cells with a nominal voltage of 3.6 V and a capacity of 3.5 Ah.  That’s 12.6 Wh in each cell. 37.8 kWh in the whole pile of batteries.  Sound like a lot?  Well it’s about the same amount energy as a gallon of gasoline.  A gallon of gas weights about 6 lbs, whereas that pile of batteries weights 330 lbs (150 kg).  And it’s not even enough batteries.  I’ll likely need to get about 2,000 more.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2018-09-07/1.jpg&quot; alt=&quot;3000 MJ1s&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;detructive-battery-testing&quot;&gt;Detructive Battery Testing&lt;/h4&gt;

&lt;p&gt;Next week I plan to start destroying some cells.  I’ll over charge them, drain them too quickly, heat them too much, whatever it takes to make them explode, melt down, of fail in some way.&lt;/p&gt;

&lt;p&gt;Why would I be so wasteful and destructive?&lt;/p&gt;

&lt;p&gt;For the most part, these cells are pretty safe.  The chance of a single cell failing catastrophically under normal use is quite low.  In pack of ~5,000 cells, the chance is 5,000 more likely.  For the sake of safety I need to assume that cells will fail during flight.  The battery packs I build need to accommodate failures without damaging their function and more importantly, preventing a chain reaction.  So I need a solid understanding of how these cells fail and what options I have to control the failures.&lt;/p&gt;

&lt;h4 id=&quot;faraday-first&quot;&gt;Faraday First&lt;/h4&gt;

&lt;p&gt;A couple weeks ago I finished modeling and printing &lt;a href=&quot;https://www.howfliesthealbatross.com/&quot;&gt;Phil’s (How Flies the Albatross)&lt;/a&gt; Faraday First plane. With this design Phil was considering high speed passenger transportation.  It’s got a blended wing shape, but more interesting are the control surfaces.  They are totally unconventional.  On the outer edge of the wings are what look like winglets, but they are rudder-like control surfaces.  They rotate about their vertical axis inducing roll.  There are no ailerons!  The ventral fin on the bottom also rotates, yielding yaw.  And come to think of it, I’m not sure what his plan is for pitch control.  Hmm.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/eflight/img/2018-09-07/2.jpg&quot; alt=&quot;FaradayFirst Flight&quot; /&gt;
&lt;img src=&quot;/eflight/img/2018-09-07/3.jpg&quot; alt=&quot;Phil's Planes&quot; /&gt;&lt;/p&gt;</content><author><name>Micah Martin</name></author><category term="Battery" /><category term="3D Printing" /><summary type="html">Batteries!</summary></entry></feed>
